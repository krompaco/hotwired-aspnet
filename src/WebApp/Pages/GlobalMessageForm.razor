@page "/globalmessageform"

<PageTitle>Global message form page</PageTitle>

<div class="bg-white rounded shadow p-4">
    <h1 class="font-semibold tracking-tight text-xl">Turbo frame in other page test</h1>

    <p class="mt-2">This page is typically not used on it's own. The Turbo Frame starts after this text.</p>

    <turbo-frame id="js-global-message-form" aria-live="polite">
        @* Accessibility-wise it's most likely better to just set HTML required attributes on the inputs but I want to have a sample of model validation in here too *@
        @*@await Component.InvokeAsync("ValidationSummary", this.Model)*@

        <form action="/forms/globalmessage" method="post" class="space-y-6 mt-4">
            <div>
                <label class="block" for="message-1"></label>
                <input class="mt-2" id="message-1" name="message" type="text" value="@this.GlobalMessageFormModel?.Message">
            </div>

            <div>
                <button type="submit" class="button-primary">Send message</button>
            </div>
        </form>
    </turbo-frame>
</div>

@code {
    ////public GlobalMessageFormPageModel(ILogger<IndexModel> logger, RazorViewComponentToStringRenderer viewComponentToStringRenderer, IHubContext<AppHub> hub)
    ////{
    ////    this.logger = logger;
    ////    this.viewComponentToStringRenderer = viewComponentToStringRenderer;
    ////    this.hub = hub;
    ////    this.GlobalMessageFormModel = new GlobalMessageFormModel();
    ////}

    [Parameter]
    public GlobalMessageFormModel? GlobalMessageFormModel { get; set; }

    ////public void OnGet()
    ////{
    ////    this.logger.LogInformation("Hello from OnGet()");
    ////}

    ////public async Task<IActionResult> OnPost()
    ////{
    ////    this.logger.LogInformation("Hello from OnPost()");

    ////    if (!this.ModelState.IsValid)
    ////    {
    ////        // This follows the recommendation to set status = 422 for validation errors
    ////        this.Response.SetTurboValidationErrorStatus(this.Request);
    ////        return this.Page();
    ////    }

    ////    var alert = await this.viewComponentToStringRenderer.RenderAsync(
    ////        "Alert",
    ////        new Alert(this.GlobalMessageFormModel.Message!));

    ////    var alertMessage = new TurboStreamMessage
    ////        {
    ////            Action = TurboStreamAction.Update,
    ////            Target = "js-alert-target",
    ////            TemplateInnerHtml = alert,
    ////        };

    ////    await this.hub.Clients.All.SendAsync("GlobalMessageReceived", alertMessage.ToString());
    ////    return new EmptyResult();
    ////}
 }
